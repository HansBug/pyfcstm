@startuml

abstract class State {
    name: str
    description: str
    type: StateType
    min_time_lock: int
    max_time_lock: int
    on_entry: List[UpdateAssignment]
    on_duration: List[UpdateAssignment]
    on_exit: List[UpdateAssignment]
    events: List[Event]
}

State "1" *-- "*" UpdateAssignment: on_entry
State "1" *-- "*" UpdateAssignment: on_duration
State "1" *-- "*" UpdateAssignment: on_exit

CompositeState -up-|> State

class CompositeState {
    initial: Optional[State]
    states: List[State]
}

CompositeState "1" *-- "0..1" State : initial
CompositeState "1" *-- "0..*" State : states

NormalState -up-|> State

class NormalState {
}

PseudaState -up-|> State

class PseudaState {

}

class Event {
    name: str
    guard
}

class Transition {
    event: Event
    from_state: State
    to_state: State
}
Transition "*" *-- "1" State : from_state
Transition "*" *-- "1" State : to_state
Transition "*" *-- "1" Event : event

class Statechart {
    name: str
    preamble: List[DeclareAssignment]
    states: List[State]
    events: List[Event]
    transitions: List[Transition]
}

Statechart "1" *-- "*" DeclareAssignment
Statechart "1" o-- "*" State
Statechart "1" o-- "*" Event
Statechart "1" o-- "*" Transition

abstract class Assignment {
    lvalue: str
}

class DeclareAssignment {
    initial_value: number
}

DeclareAssignment -up-|> Assignment

class UpdateAssignment {
    rvalue: expression
}

UpdateAssignment -up-|> Assignment

@enduml