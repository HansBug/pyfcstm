# Generated from ./pyfcstm/dsl/grammar/Grammar.g4 by ANTLR 4.9.3
from antlr4 import *
from io import StringIO
import sys

if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2/")
        buf.write("\u01df\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write('\t\36\4\37\t\37\4 \t \4!\t!\4"\t"\4#\t#\4$\t$\4%\t%')
        buf.write("\4&\t&\4'\t'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3")
        buf.write("\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\13\3")
        buf.write("\13\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\20")
        buf.write("\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25")
        buf.write("\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\31\3\31")
        buf.write("\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35")
        buf.write("\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3")
        buf.write(' \3!\3!\3"\3"\3"\3"\3#\6#\u00b7\n#\r#\16#\u00b8\3')
        buf.write("#\3#\7#\u00bd\n#\f#\16#\u00c0\13#\3#\3#\5#\u00c4\n#\3")
        buf.write("#\6#\u00c7\n#\r#\16#\u00c8\5#\u00cb\n#\3#\3#\6#\u00cf")
        buf.write("\n#\r#\16#\u00d0\3#\3#\5#\u00d5\n#\3#\6#\u00d8\n#\r#\16")
        buf.write("#\u00d9\5#\u00dc\n#\3#\6#\u00df\n#\r#\16#\u00e0\3#\3#")
        buf.write("\5#\u00e5\n#\3#\6#\u00e8\n#\r#\16#\u00e9\5#\u00ec\n#\3")
        buf.write("$\6$\u00ef\n$\r$\16$\u00f0\3%\3%\3%\3%\6%\u00f7\n%\r%")
        buf.write("\16%\u00f8\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\5&\u0107")
        buf.write("\n&\3'\3'\3'\3'\3'\3'\3'\3'\3'\3'\3'\3'\3")
        buf.write("'\3'\3'\5'\u0118\n'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3")
        buf.write("(\3(\3(\5(\u0180\n(\3)\3)\7)\u0184\n)\f)\16)\u0187\13")
        buf.write(")\3*\3*\3*\7*\u018c\n*\f*\16*\u018f\13*\3*\3*\3*\3*\7")
        buf.write("*\u0195\n*\f*\16*\u0198\13*\3*\5*\u019b\n*\3+\3+\3+\3")
        buf.write("+\5+\u01a1\n+\3+\5+\u01a4\n+\3+\3+\3+\3+\3+\3+\3+\3+\3")
        buf.write("+\3+\3+\3+\3+\5+\u01b3\n+\3,\3,\3-\6-\u01b8\n-\r-\16-")
        buf.write("\u01b9\3-\3-\3.\3.\3.\3.\7.\u01c2\n.\f.\16.\u01c5\13.")
        buf.write("\3.\3.\3.\3.\3.\3/\3/\3/\3/\7/\u01d0\n/\f/\16/\u01d3\13")
        buf.write("/\3/\3/\3\60\3\60\7\60\u01d9\n\60\f\60\16\60\u01dc\13")
        buf.write("\60\3\60\3\60\3\u01c3\2\61\3\3\5\4\7\5\t\6\13\7\r\b\17")
        buf.write("\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23")
        buf.write("%\24'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36")
        buf.write(";\37= ?!A\"C#E$G%I&K'M(O)Q*S+U\2W\2Y,[-]._/\3\2\17\3")
        buf.write("\2\62;\4\2GGgg\4\2--//\5\2\62;CHch\5\2C\\aac|\6\2\62;")
        buf.write("C\\aac|\6\2\f\f\17\17$$^^\6\2\f\f\17\17))^^\n\2$$))^^")
        buf.write('ddhhppttvv\3\2\62\65\3\2\629\5\2\13\f\17\17""\4\2\f')
        buf.write("\f\17\17\2\u0217\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2")
        buf.write("\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21")
        buf.write("\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3")
        buf.write("\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2")
        buf.write("\2\2#\3\2\2\2\2%\3\2\2\2\2'\3\2\2\2\2)\3\2\2\2\2+\3\2")
        buf.write("\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2")
        buf.write("\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2")
        buf.write("\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3")
        buf.write("\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q")
        buf.write("\3\2\2\2\2S\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2")
        buf.write("_\3\2\2\2\3a\3\2\2\2\5d\3\2\2\2\7f\3\2\2\2\th\3\2\2\2")
        buf.write("\13j\3\2\2\2\rl\3\2\2\2\17n\3\2\2\2\21p\3\2\2\2\23s\3")
        buf.write("\2\2\2\25u\3\2\2\2\27w\3\2\2\2\31y\3\2\2\2\33|\3\2\2\2")
        buf.write("\35\177\3\2\2\2\37\u0081\3\2\2\2!\u0083\3\2\2\2#\u0085")
        buf.write("\3\2\2\2%\u0087\3\2\2\2'\u0089\3\2\2\2)\u008b\3\2\2\2")
        buf.write("+\u008f\3\2\2\2-\u0091\3\2\2\2/\u0093\3\2\2\2\61\u0096")
        buf.write("\3\2\2\2\63\u0099\3\2\2\2\65\u009c\3\2\2\2\67\u009f\3")
        buf.write("\2\2\29\u00a2\3\2\2\2;\u00a6\3\2\2\2=\u00a9\3\2\2\2?\u00ac")
        buf.write("\3\2\2\2A\u00af\3\2\2\2C\u00b1\3\2\2\2E\u00eb\3\2\2\2")
        buf.write("G\u00ee\3\2\2\2I\u00f2\3\2\2\2K\u0106\3\2\2\2M\u0117\3")
        buf.write("\2\2\2O\u017f\3\2\2\2Q\u0181\3\2\2\2S\u019a\3\2\2\2U\u01b2")
        buf.write("\3\2\2\2W\u01b4\3\2\2\2Y\u01b7\3\2\2\2[\u01bd\3\2\2\2")
        buf.write("]\u01cb\3\2\2\2_\u01d6\3\2\2\2ab\7<\2\2bc\7?\2\2c\4\3")
        buf.write("\2\2\2de\7=\2\2e\6\3\2\2\2fg\7?\2\2g\b\3\2\2\2hi\7*\2")
        buf.write("\2i\n\3\2\2\2jk\7+\2\2k\f\3\2\2\2lm\7-\2\2m\16\3\2\2\2")
        buf.write("no\7/\2\2o\20\3\2\2\2pq\7,\2\2qr\7,\2\2r\22\3\2\2\2st")
        buf.write("\7,\2\2t\24\3\2\2\2uv\7\61\2\2v\26\3\2\2\2wx\7'\2\2x")
        buf.write("\30\3\2\2\2yz\7>\2\2z{\7>\2\2{\32\3\2\2\2|}\7@\2\2}~\7")
        buf.write("@\2\2~\34\3\2\2\2\177\u0080\7(\2\2\u0080\36\3\2\2\2\u0081")
        buf.write("\u0082\7~\2\2\u0082 \3\2\2\2\u0083\u0084\7`\2\2\u0084")
        buf.write('"\3\2\2\2\u0085\u0086\7A\2\2\u0086$\3\2\2\2\u0087\u0088')
        buf.write("\7<\2\2\u0088&\3\2\2\2\u0089\u008a\7#\2\2\u008a(\3\2\2")
        buf.write("\2\u008b\u008c\7p\2\2\u008c\u008d\7q\2\2\u008d\u008e\7")
        buf.write("v\2\2\u008e*\3\2\2\2\u008f\u0090\7>\2\2\u0090,\3\2\2\2")
        buf.write("\u0091\u0092\7@\2\2\u0092.\3\2\2\2\u0093\u0094\7>\2\2")
        buf.write("\u0094\u0095\7?\2\2\u0095\60\3\2\2\2\u0096\u0097\7@\2")
        buf.write("\2\u0097\u0098\7?\2\2\u0098\62\3\2\2\2\u0099\u009a\7?")
        buf.write("\2\2\u009a\u009b\7?\2\2\u009b\64\3\2\2\2\u009c\u009d\7")
        buf.write("#\2\2\u009d\u009e\7?\2\2\u009e\66\3\2\2\2\u009f\u00a0")
        buf.write("\7(\2\2\u00a0\u00a1\7(\2\2\u00a18\3\2\2\2\u00a2\u00a3")
        buf.write("\7c\2\2\u00a3\u00a4\7p\2\2\u00a4\u00a5\7f\2\2\u00a5:\3")
        buf.write("\2\2\2\u00a6\u00a7\7~\2\2\u00a7\u00a8\7~\2\2\u00a8<\3")
        buf.write("\2\2\2\u00a9\u00aa\7q\2\2\u00aa\u00ab\7t\2\2\u00ab>\3")
        buf.write("\2\2\2\u00ac\u00ad\7r\2\2\u00ad\u00ae\7k\2\2\u00ae@\3")
        buf.write("\2\2\2\u00af\u00b0\7G\2\2\u00b0B\3\2\2\2\u00b1\u00b2\7")
        buf.write("v\2\2\u00b2\u00b3\7c\2\2\u00b3\u00b4\7w\2\2\u00b4D\3\2")
        buf.write("\2\2\u00b5\u00b7\t\2\2\2\u00b6\u00b5\3\2\2\2\u00b7\u00b8")
        buf.write("\3\2\2\2\u00b8\u00b6\3\2\2\2\u00b8\u00b9\3\2\2\2\u00b9")
        buf.write("\u00ba\3\2\2\2\u00ba\u00be\7\60\2\2\u00bb\u00bd\t\2\2")
        buf.write("\2\u00bc\u00bb\3\2\2\2\u00bd\u00c0\3\2\2\2\u00be\u00bc")
        buf.write("\3\2\2\2\u00be\u00bf\3\2\2\2\u00bf\u00ca\3\2\2\2\u00c0")
        buf.write("\u00be\3\2\2\2\u00c1\u00c3\t\3\2\2\u00c2\u00c4\t\4\2\2")
        buf.write("\u00c3\u00c2\3\2\2\2\u00c3\u00c4\3\2\2\2\u00c4\u00c6\3")
        buf.write("\2\2\2\u00c5\u00c7\t\2\2\2\u00c6\u00c5\3\2\2\2\u00c7\u00c8")
        buf.write("\3\2\2\2\u00c8\u00c6\3\2\2\2\u00c8\u00c9\3\2\2\2\u00c9")
        buf.write("\u00cb\3\2\2\2\u00ca\u00c1\3\2\2\2\u00ca\u00cb\3\2\2\2")
        buf.write("\u00cb\u00ec\3\2\2\2\u00cc\u00ce\7\60\2\2\u00cd\u00cf")
        buf.write("\t\2\2\2\u00ce\u00cd\3\2\2\2\u00cf\u00d0\3\2\2\2\u00d0")
        buf.write("\u00ce\3\2\2\2\u00d0\u00d1\3\2\2\2\u00d1\u00db\3\2\2\2")
        buf.write("\u00d2\u00d4\t\3\2\2\u00d3\u00d5\t\4\2\2\u00d4\u00d3\3")
        buf.write("\2\2\2\u00d4\u00d5\3\2\2\2\u00d5\u00d7\3\2\2\2\u00d6\u00d8")
        buf.write("\t\2\2\2\u00d7\u00d6\3\2\2\2\u00d8\u00d9\3\2\2\2\u00d9")
        buf.write("\u00d7\3\2\2\2\u00d9\u00da\3\2\2\2\u00da\u00dc\3\2\2\2")
        buf.write("\u00db\u00d2\3\2\2\2\u00db\u00dc\3\2\2\2\u00dc\u00ec\3")
        buf.write("\2\2\2\u00dd\u00df\t\2\2\2\u00de\u00dd\3\2\2\2\u00df\u00e0")
        buf.write("\3\2\2\2\u00e0\u00de\3\2\2\2\u00e0\u00e1\3\2\2\2\u00e1")
        buf.write("\u00e2\3\2\2\2\u00e2\u00e4\t\3\2\2\u00e3\u00e5\t\4\2\2")
        buf.write("\u00e4\u00e3\3\2\2\2\u00e4\u00e5\3\2\2\2\u00e5\u00e7\3")
        buf.write("\2\2\2\u00e6\u00e8\t\2\2\2\u00e7\u00e6\3\2\2\2\u00e8\u00e9")
        buf.write("\3\2\2\2\u00e9\u00e7\3\2\2\2\u00e9\u00ea\3\2\2\2\u00ea")
        buf.write("\u00ec\3\2\2\2\u00eb\u00b6\3\2\2\2\u00eb\u00cc\3\2\2\2")
        buf.write("\u00eb\u00de\3\2\2\2\u00ecF\3\2\2\2\u00ed\u00ef\t\2\2")
        buf.write("\2\u00ee\u00ed\3\2\2\2\u00ef\u00f0\3\2\2\2\u00f0\u00ee")
        buf.write("\3\2\2\2\u00f0\u00f1\3\2\2\2\u00f1H\3\2\2\2\u00f2\u00f3")
        buf.write("\7\62\2\2\u00f3\u00f4\7z\2\2\u00f4\u00f6\3\2\2\2\u00f5")
        buf.write("\u00f7\t\5\2\2\u00f6\u00f5\3\2\2\2\u00f7\u00f8\3\2\2\2")
        buf.write("\u00f8\u00f6\3\2\2\2\u00f8\u00f9\3\2\2\2\u00f9J\3\2\2")
        buf.write("\2\u00fa\u00fb\7V\2\2\u00fb\u00fc\7t\2\2\u00fc\u00fd\7")
        buf.write("w\2\2\u00fd\u0107\7g\2\2\u00fe\u00ff\7v\2\2\u00ff\u0100")
        buf.write("\7t\2\2\u0100\u0101\7w\2\2\u0101\u0107\7g\2\2\u0102\u0103")
        buf.write("\7V\2\2\u0103\u0104\7T\2\2\u0104\u0105\7W\2\2\u0105\u0107")
        buf.write("\7G\2\2\u0106\u00fa\3\2\2\2\u0106\u00fe\3\2\2\2\u0106")
        buf.write("\u0102\3\2\2\2\u0107L\3\2\2\2\u0108\u0109\7H\2\2\u0109")
        buf.write("\u010a\7c\2\2\u010a\u010b\7n\2\2\u010b\u010c\7u\2\2\u010c")
        buf.write("\u0118\7g\2\2\u010d\u010e\7h\2\2\u010e\u010f\7c\2\2\u010f")
        buf.write("\u0110\7n\2\2\u0110\u0111\7u\2\2\u0111\u0118\7g\2\2\u0112")
        buf.write("\u0113\7H\2\2\u0113\u0114\7C\2\2\u0114\u0115\7N\2\2\u0115")
        buf.write("\u0116\7U\2\2\u0116\u0118\7G\2\2\u0117\u0108\3\2\2\2\u0117")
        buf.write("\u010d\3\2\2\2\u0117\u0112\3\2\2\2\u0118N\3\2\2\2\u0119")
        buf.write("\u011a\7u\2\2\u011a\u011b\7k\2\2\u011b\u0180\7p\2\2\u011c")
        buf.write("\u011d\7e\2\2\u011d\u011e\7q\2\2\u011e\u0180\7u\2\2\u011f")
        buf.write("\u0120\7v\2\2\u0120\u0121\7c\2\2\u0121\u0180\7p\2\2\u0122")
        buf.write("\u0123\7c\2\2\u0123\u0124\7u\2\2\u0124\u0125\7k\2\2\u0125")
        buf.write("\u0180\7p\2\2\u0126\u0127\7c\2\2\u0127\u0128\7e\2\2\u0128")
        buf.write("\u0129\7q\2\2\u0129\u0180\7u\2\2\u012a\u012b\7c\2\2\u012b")
        buf.write("\u012c\7v\2\2\u012c\u012d\7c\2\2\u012d\u0180\7p\2\2\u012e")
        buf.write("\u012f\7u\2\2\u012f\u0130\7k\2\2\u0130\u0131\7p\2\2\u0131")
        buf.write("\u0180\7j\2\2\u0132\u0133\7e\2\2\u0133\u0134\7q\2\2\u0134")
        buf.write("\u0135\7u\2\2\u0135\u0180\7j\2\2\u0136\u0137\7v\2\2\u0137")
        buf.write("\u0138\7c\2\2\u0138\u0139\7p\2\2\u0139\u0180\7j\2\2\u013a")
        buf.write("\u013b\7c\2\2\u013b\u013c\7u\2\2\u013c\u013d\7k\2\2\u013d")
        buf.write("\u013e\7p\2\2\u013e\u0180\7j\2\2\u013f\u0140\7c\2\2\u0140")
        buf.write("\u0141\7e\2\2\u0141\u0142\7q\2\2\u0142\u0143\7u\2\2\u0143")
        buf.write("\u0180\7j\2\2\u0144\u0145\7c\2\2\u0145\u0146\7v\2\2\u0146")
        buf.write("\u0147\7c\2\2\u0147\u0148\7p\2\2\u0148\u0180\7j\2\2\u0149")
        buf.write("\u014a\7u\2\2\u014a\u014b\7s\2\2\u014b\u014c\7t\2\2\u014c")
        buf.write("\u0180\7v\2\2\u014d\u014e\7e\2\2\u014e\u014f\7d\2\2\u014f")
        buf.write("\u0150\7t\2\2\u0150\u0180\7v\2\2\u0151\u0152\7g\2\2\u0152")
        buf.write("\u0153\7z\2\2\u0153\u0180\7r\2\2\u0154\u0155\7n\2\2\u0155")
        buf.write("\u0156\7q\2\2\u0156\u0180\7i\2\2\u0157\u0158\7n\2\2\u0158")
        buf.write("\u0159\7q\2\2\u0159\u015a\7i\2\2\u015a\u015b\7\63\2\2")
        buf.write("\u015b\u0180\7\62\2\2\u015c\u015d\7n\2\2\u015d\u015e\7")
        buf.write("q\2\2\u015e\u015f\7i\2\2\u015f\u0180\7\64\2\2\u0160\u0161")
        buf.write("\7n\2\2\u0161\u0162\7q\2\2\u0162\u0163\7i\2\2\u0163\u0164")
        buf.write("\7\63\2\2\u0164\u0180\7r\2\2\u0165\u0166\7c\2\2\u0166")
        buf.write("\u0167\7d\2\2\u0167\u0180\7u\2\2\u0168\u0169\7e\2\2\u0169")
        buf.write("\u016a\7g\2\2\u016a\u016b\7k\2\2\u016b\u0180\7n\2\2\u016c")
        buf.write("\u016d\7h\2\2\u016d\u016e\7n\2\2\u016e\u016f\7q\2\2\u016f")
        buf.write("\u0170\7q\2\2\u0170\u0180\7t\2\2\u0171\u0172\7t\2\2\u0172")
        buf.write("\u0173\7q\2\2\u0173\u0174\7w\2\2\u0174\u0175\7p\2\2\u0175")
        buf.write("\u0180\7f\2\2\u0176\u0177\7v\2\2\u0177\u0178\7t\2\2\u0178")
        buf.write("\u0179\7w\2\2\u0179\u017a\7p\2\2\u017a\u0180\7e\2\2\u017b")
        buf.write("\u017c\7u\2\2\u017c\u017d\7k\2\2\u017d\u017e\7i\2\2\u017e")
        buf.write("\u0180\7p\2\2\u017f\u0119\3\2\2\2\u017f\u011c\3\2\2\2")
        buf.write("\u017f\u011f\3\2\2\2\u017f\u0122\3\2\2\2\u017f\u0126\3")
        buf.write("\2\2\2\u017f\u012a\3\2\2\2\u017f\u012e\3\2\2\2\u017f\u0132")
        buf.write("\3\2\2\2\u017f\u0136\3\2\2\2\u017f\u013a\3\2\2\2\u017f")
        buf.write("\u013f\3\2\2\2\u017f\u0144\3\2\2\2\u017f\u0149\3\2\2\2")
        buf.write("\u017f\u014d\3\2\2\2\u017f\u0151\3\2\2\2\u017f\u0154\3")
        buf.write("\2\2\2\u017f\u0157\3\2\2\2\u017f\u015c\3\2\2\2\u017f\u0160")
        buf.write("\3\2\2\2\u017f\u0165\3\2\2\2\u017f\u0168\3\2\2\2\u017f")
        buf.write("\u016c\3\2\2\2\u017f\u0171\3\2\2\2\u017f\u0176\3\2\2\2")
        buf.write("\u017f\u017b\3\2\2\2\u0180P\3\2\2\2\u0181\u0185\t\6\2")
        buf.write("\2\u0182\u0184\t\7\2\2\u0183\u0182\3\2\2\2\u0184\u0187")
        buf.write("\3\2\2\2\u0185\u0183\3\2\2\2\u0185\u0186\3\2\2\2\u0186")
        buf.write("R\3\2\2\2\u0187\u0185\3\2\2\2\u0188\u018d\7$\2\2\u0189")
        buf.write("\u018c\n\b\2\2\u018a\u018c\5U+\2\u018b\u0189\3\2\2\2\u018b")
        buf.write("\u018a\3\2\2\2\u018c\u018f\3\2\2\2\u018d\u018b\3\2\2\2")
        buf.write("\u018d\u018e\3\2\2\2\u018e\u0190\3\2\2\2\u018f\u018d\3")
        buf.write("\2\2\2\u0190\u019b\7$\2\2\u0191\u0196\7)\2\2\u0192\u0195")
        buf.write("\n\t\2\2\u0193\u0195\5U+\2\u0194\u0192\3\2\2\2\u0194\u0193")
        buf.write("\3\2\2\2\u0195\u0198\3\2\2\2\u0196\u0194\3\2\2\2\u0196")
        buf.write("\u0197\3\2\2\2\u0197\u0199\3\2\2\2\u0198\u0196\3\2\2\2")
        buf.write("\u0199\u019b\7)\2\2\u019a\u0188\3\2\2\2\u019a\u0191\3")
        buf.write("\2\2\2\u019bT\3\2\2\2\u019c\u019d\7^\2\2\u019d\u01b3\t")
        buf.write("\n\2\2\u019e\u01a3\7^\2\2\u019f\u01a1\t\13\2\2\u01a0\u019f")
        buf.write("\3\2\2\2\u01a0\u01a1\3\2\2\2\u01a1\u01a2\3\2\2\2\u01a2")
        buf.write("\u01a4\t\f\2\2\u01a3\u01a0\3\2\2\2\u01a3\u01a4\3\2\2\2")
        buf.write("\u01a4\u01a5\3\2\2\2\u01a5\u01b3\t\f\2\2\u01a6\u01a7\7")
        buf.write("^\2\2\u01a7\u01a8\7w\2\2\u01a8\u01a9\5W,\2\u01a9\u01aa")
        buf.write("\5W,\2\u01aa\u01ab\5W,\2\u01ab\u01ac\5W,\2\u01ac\u01b3")
        buf.write("\3\2\2\2\u01ad\u01ae\7^\2\2\u01ae\u01af\7z\2\2\u01af\u01b0")
        buf.write("\5W,\2\u01b0\u01b1\5W,\2\u01b1\u01b3\3\2\2\2\u01b2\u019c")
        buf.write("\3\2\2\2\u01b2\u019e\3\2\2\2\u01b2\u01a6\3\2\2\2\u01b2")
        buf.write("\u01ad\3\2\2\2\u01b3V\3\2\2\2\u01b4\u01b5\t\5\2\2\u01b5")
        buf.write("X\3\2\2\2\u01b6\u01b8\t\r\2\2\u01b7\u01b6\3\2\2\2\u01b8")
        buf.write("\u01b9\3\2\2\2\u01b9\u01b7\3\2\2\2\u01b9\u01ba\3\2\2\2")
        buf.write("\u01ba\u01bb\3\2\2\2\u01bb\u01bc\b-\2\2\u01bcZ\3\2\2\2")
        buf.write("\u01bd\u01be\7\61\2\2\u01be\u01bf\7,\2\2\u01bf\u01c3\3")
        buf.write("\2\2\2\u01c0\u01c2\13\2\2\2\u01c1\u01c0\3\2\2\2\u01c2")
        buf.write("\u01c5\3\2\2\2\u01c3\u01c4\3\2\2\2\u01c3\u01c1\3\2\2\2")
        buf.write("\u01c4\u01c6\3\2\2\2\u01c5\u01c3\3\2\2\2\u01c6\u01c7\7")
        buf.write(",\2\2\u01c7\u01c8\7\61\2\2\u01c8\u01c9\3\2\2\2\u01c9\u01ca")
        buf.write("\b.\2\2\u01ca\\\3\2\2\2\u01cb\u01cc\7\61\2\2\u01cc\u01cd")
        buf.write("\7\61\2\2\u01cd\u01d1\3\2\2\2\u01ce\u01d0\n\16\2\2\u01cf")
        buf.write("\u01ce\3\2\2\2\u01d0\u01d3\3\2\2\2\u01d1\u01cf\3\2\2\2")
        buf.write("\u01d1\u01d2\3\2\2\2\u01d2\u01d4\3\2\2\2\u01d3\u01d1\3")
        buf.write("\2\2\2\u01d4\u01d5\b/\2\2\u01d5^\3\2\2\2\u01d6\u01da\7")
        buf.write("%\2\2\u01d7\u01d9\n\16\2\2\u01d8\u01d7\3\2\2\2\u01d9\u01dc")
        buf.write("\3\2\2\2\u01da\u01d8\3\2\2\2\u01da\u01db\3\2\2\2\u01db")
        buf.write("\u01dd\3\2\2\2\u01dc\u01da\3\2\2\2\u01dd\u01de\b\60\2")
        buf.write('\2\u01de`\3\2\2\2"\2\u00b8\u00be\u00c3\u00c8\u00ca\u00d0')
        buf.write("\u00d4\u00d9\u00db\u00e0\u00e4\u00e9\u00eb\u00f0\u00f8")
        buf.write("\u0106\u0117\u017f\u0185\u018b\u018d\u0194\u0196\u019a")
        buf.write("\u01a0\u01a3\u01b2\u01b9\u01c3\u01d1\u01da\3\b\2\2")
        return buf.getvalue()


class GrammarLexer(Lexer):
    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [DFA(ds, i) for i, ds in enumerate(atn.decisionToState)]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    FLOAT = 34
    INT = 35
    HEX_INT = 36
    TRUE = 37
    FALSE = 38
    UFUNC_NAME = 39
    ID = 40
    STRING = 41
    WS = 42
    BLOCK_COMMENT = 43
    LINE_COMMENT = 44
    PYTHON_COMMENT = 45

    channelNames = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"]

    modeNames = ["DEFAULT_MODE"]

    literalNames = [
        "<INVALID>",
        "':='",
        "';'",
        "'='",
        "'('",
        "')'",
        "'+'",
        "'-'",
        "'**'",
        "'*'",
        "'/'",
        "'%'",
        "'<<'",
        "'>>'",
        "'&'",
        "'|'",
        "'^'",
        "'?'",
        "':'",
        "'!'",
        "'not'",
        "'<'",
        "'>'",
        "'<='",
        "'>='",
        "'=='",
        "'!='",
        "'&&'",
        "'and'",
        "'||'",
        "'or'",
        "'pi'",
        "'E'",
        "'tau'",
    ]

    symbolicNames = [
        "<INVALID>",
        "FLOAT",
        "INT",
        "HEX_INT",
        "TRUE",
        "FALSE",
        "UFUNC_NAME",
        "ID",
        "STRING",
        "WS",
        "BLOCK_COMMENT",
        "LINE_COMMENT",
        "PYTHON_COMMENT",
    ]

    ruleNames = [
        "T__0",
        "T__1",
        "T__2",
        "T__3",
        "T__4",
        "T__5",
        "T__6",
        "T__7",
        "T__8",
        "T__9",
        "T__10",
        "T__11",
        "T__12",
        "T__13",
        "T__14",
        "T__15",
        "T__16",
        "T__17",
        "T__18",
        "T__19",
        "T__20",
        "T__21",
        "T__22",
        "T__23",
        "T__24",
        "T__25",
        "T__26",
        "T__27",
        "T__28",
        "T__29",
        "T__30",
        "T__31",
        "T__32",
        "FLOAT",
        "INT",
        "HEX_INT",
        "TRUE",
        "FALSE",
        "UFUNC_NAME",
        "ID",
        "STRING",
        "EscapeSequence",
        "HexDigit",
        "WS",
        "BLOCK_COMMENT",
        "LINE_COMMENT",
        "PYTHON_COMMENT",
    ]

    grammarFileName = "Grammar.g4"

    def __init__(self, input=None, output: TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.3")
        self._interp = LexerATNSimulator(
            self, self.atn, self.decisionsToDFA, PredictionContextCache()
        )
        self._actions = None
        self._predicates = None
