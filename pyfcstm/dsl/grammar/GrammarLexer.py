# Generated from ./pyfcstm/dsl/grammar/Grammar.g4 by ANTLR 4.9.3
from antlr4 import *
from io import StringIO
import sys

if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2+")
        buf.write("\u0199\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write('\t\36\4\37\t\37\4 \t \4!\t!\4"\t"\4#\t#\4$\t$\4%\t%')
        buf.write("\4&\t&\4'\t'\4(\t(\4)\t)\4*\t*\3\2\3\2\3\2\3\3\3\3\3")
        buf.write("\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n")
        buf.write("\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17")
        buf.write("\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\23")
        buf.write("\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30")
        buf.write("\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33")
        buf.write("\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\37")
        buf.write("\3\37\3 \3 \3 \3 \3!\6!\u00a7\n!\r!\16!\u00a8\3!\3!\7")
        buf.write("!\u00ad\n!\f!\16!\u00b0\13!\3!\3!\5!\u00b4\n!\3!\6!\u00b7")
        buf.write("\n!\r!\16!\u00b8\5!\u00bb\n!\3!\3!\6!\u00bf\n!\r!\16!")
        buf.write("\u00c0\3!\3!\5!\u00c5\n!\3!\6!\u00c8\n!\r!\16!\u00c9\5")
        buf.write("!\u00cc\n!\3!\6!\u00cf\n!\r!\16!\u00d0\3!\3!\5!\u00d5")
        buf.write('\n!\3!\6!\u00d8\n!\r!\16!\u00d9\5!\u00dc\n!\3"\6"\u00df')
        buf.write('\n"\r"\16"\u00e0\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3')
        buf.write("#\5#\u00ef\n#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3")
        buf.write("$\3$\5$\u0100\n$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3")
        buf.write("%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3")
        buf.write("%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3")
        buf.write("%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3")
        buf.write("%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3")
        buf.write("%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\5")
        buf.write("%\u0168\n%\3&\3&\7&\u016c\n&\f&\16&\u016f\13&\3'\6'")
        buf.write("\u0172\n'\r'\16'\u0173\3'\3'\3(\3(\3(\3(\7(\u017c")
        buf.write("\n(\f(\16(\u017f\13(\3(\3(\3(\3(\3(\3)\3)\3)\3)\7)\u018a")
        buf.write("\n)\f)\16)\u018d\13)\3)\3)\3*\3*\7*\u0193\n*\f*\16*\u0196")
        buf.write("\13*\3*\3*\3\u017d\2+\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21")
        buf.write("\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24")
        buf.write("'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37")
        buf.write("= ?!A\"C#E$G%I&K'M(O)Q*S+\3\2\t\3\2\62;\4\2GGgg\4\2-")
        buf.write('-//\5\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17""\4\2\f')
        buf.write("\f\17\17\2\u01c8\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2")
        buf.write("\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21")
        buf.write("\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3")
        buf.write("\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2")
        buf.write("\2\2#\3\2\2\2\2%\3\2\2\2\2'\3\2\2\2\2)\3\2\2\2\2+\3\2")
        buf.write("\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2")
        buf.write("\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2")
        buf.write("\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3")
        buf.write("\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q")
        buf.write("\3\2\2\2\2S\3\2\2\2\3U\3\2\2\2\5X\3\2\2\2\7Z\3\2\2\2\t")
        buf.write("\\\3\2\2\2\13^\3\2\2\2\r`\3\2\2\2\17b\3\2\2\2\21d\3\2")
        buf.write("\2\2\23g\3\2\2\2\25i\3\2\2\2\27k\3\2\2\2\31m\3\2\2\2\33")
        buf.write("p\3\2\2\2\35s\3\2\2\2\37u\3\2\2\2!w\3\2\2\2#y\3\2\2\2")
        buf.write("%{\3\2\2\2'\177\3\2\2\2)\u0081\3\2\2\2+\u0083\3\2\2\2")
        buf.write("-\u0086\3\2\2\2/\u0089\3\2\2\2\61\u008c\3\2\2\2\63\u008f")
        buf.write("\3\2\2\2\65\u0092\3\2\2\2\67\u0096\3\2\2\29\u0099\3\2")
        buf.write("\2\2;\u009c\3\2\2\2=\u009f\3\2\2\2?\u00a1\3\2\2\2A\u00db")
        buf.write("\3\2\2\2C\u00de\3\2\2\2E\u00ee\3\2\2\2G\u00ff\3\2\2\2")
        buf.write("I\u0167\3\2\2\2K\u0169\3\2\2\2M\u0171\3\2\2\2O\u0177\3")
        buf.write("\2\2\2Q\u0185\3\2\2\2S\u0190\3\2\2\2UV\7<\2\2VW\7?\2\2")
        buf.write("W\4\3\2\2\2XY\7=\2\2Y\6\3\2\2\2Z[\7?\2\2[\b\3\2\2\2\\")
        buf.write("]\7*\2\2]\n\3\2\2\2^_\7+\2\2_\f\3\2\2\2`a\7-\2\2a\16\3")
        buf.write("\2\2\2bc\7/\2\2c\20\3\2\2\2de\7,\2\2ef\7,\2\2f\22\3\2")
        buf.write("\2\2gh\7,\2\2h\24\3\2\2\2ij\7\61\2\2j\26\3\2\2\2kl\7'")
        buf.write("\2\2l\30\3\2\2\2mn\7>\2\2no\7>\2\2o\32\3\2\2\2pq\7@\2")
        buf.write("\2qr\7@\2\2r\34\3\2\2\2st\7(\2\2t\36\3\2\2\2uv\7~\2\2")
        buf.write('v \3\2\2\2wx\7`\2\2x"\3\2\2\2yz\7#\2\2z$\3\2\2\2{|\7')
        buf.write("p\2\2|}\7q\2\2}~\7v\2\2~&\3\2\2\2\177\u0080\7>\2\2\u0080")
        buf.write("(\3\2\2\2\u0081\u0082\7@\2\2\u0082*\3\2\2\2\u0083\u0084")
        buf.write("\7>\2\2\u0084\u0085\7?\2\2\u0085,\3\2\2\2\u0086\u0087")
        buf.write("\7@\2\2\u0087\u0088\7?\2\2\u0088.\3\2\2\2\u0089\u008a")
        buf.write("\7?\2\2\u008a\u008b\7?\2\2\u008b\60\3\2\2\2\u008c\u008d")
        buf.write("\7#\2\2\u008d\u008e\7?\2\2\u008e\62\3\2\2\2\u008f\u0090")
        buf.write("\7(\2\2\u0090\u0091\7(\2\2\u0091\64\3\2\2\2\u0092\u0093")
        buf.write("\7c\2\2\u0093\u0094\7p\2\2\u0094\u0095\7f\2\2\u0095\66")
        buf.write("\3\2\2\2\u0096\u0097\7~\2\2\u0097\u0098\7~\2\2\u00988")
        buf.write("\3\2\2\2\u0099\u009a\7q\2\2\u009a\u009b\7t\2\2\u009b:")
        buf.write("\3\2\2\2\u009c\u009d\7r\2\2\u009d\u009e\7k\2\2\u009e<")
        buf.write("\3\2\2\2\u009f\u00a0\7G\2\2\u00a0>\3\2\2\2\u00a1\u00a2")
        buf.write("\7v\2\2\u00a2\u00a3\7c\2\2\u00a3\u00a4\7w\2\2\u00a4@\3")
        buf.write("\2\2\2\u00a5\u00a7\t\2\2\2\u00a6\u00a5\3\2\2\2\u00a7\u00a8")
        buf.write("\3\2\2\2\u00a8\u00a6\3\2\2\2\u00a8\u00a9\3\2\2\2\u00a9")
        buf.write("\u00aa\3\2\2\2\u00aa\u00ae\7\60\2\2\u00ab\u00ad\t\2\2")
        buf.write("\2\u00ac\u00ab\3\2\2\2\u00ad\u00b0\3\2\2\2\u00ae\u00ac")
        buf.write("\3\2\2\2\u00ae\u00af\3\2\2\2\u00af\u00ba\3\2\2\2\u00b0")
        buf.write("\u00ae\3\2\2\2\u00b1\u00b3\t\3\2\2\u00b2\u00b4\t\4\2\2")
        buf.write("\u00b3\u00b2\3\2\2\2\u00b3\u00b4\3\2\2\2\u00b4\u00b6\3")
        buf.write("\2\2\2\u00b5\u00b7\t\2\2\2\u00b6\u00b5\3\2\2\2\u00b7\u00b8")
        buf.write("\3\2\2\2\u00b8\u00b6\3\2\2\2\u00b8\u00b9\3\2\2\2\u00b9")
        buf.write("\u00bb\3\2\2\2\u00ba\u00b1\3\2\2\2\u00ba\u00bb\3\2\2\2")
        buf.write("\u00bb\u00dc\3\2\2\2\u00bc\u00be\7\60\2\2\u00bd\u00bf")
        buf.write("\t\2\2\2\u00be\u00bd\3\2\2\2\u00bf\u00c0\3\2\2\2\u00c0")
        buf.write("\u00be\3\2\2\2\u00c0\u00c1\3\2\2\2\u00c1\u00cb\3\2\2\2")
        buf.write("\u00c2\u00c4\t\3\2\2\u00c3\u00c5\t\4\2\2\u00c4\u00c3\3")
        buf.write("\2\2\2\u00c4\u00c5\3\2\2\2\u00c5\u00c7\3\2\2\2\u00c6\u00c8")
        buf.write("\t\2\2\2\u00c7\u00c6\3\2\2\2\u00c8\u00c9\3\2\2\2\u00c9")
        buf.write("\u00c7\3\2\2\2\u00c9\u00ca\3\2\2\2\u00ca\u00cc\3\2\2\2")
        buf.write("\u00cb\u00c2\3\2\2\2\u00cb\u00cc\3\2\2\2\u00cc\u00dc\3")
        buf.write("\2\2\2\u00cd\u00cf\t\2\2\2\u00ce\u00cd\3\2\2\2\u00cf\u00d0")
        buf.write("\3\2\2\2\u00d0\u00ce\3\2\2\2\u00d0\u00d1\3\2\2\2\u00d1")
        buf.write("\u00d2\3\2\2\2\u00d2\u00d4\t\3\2\2\u00d3\u00d5\t\4\2\2")
        buf.write("\u00d4\u00d3\3\2\2\2\u00d4\u00d5\3\2\2\2\u00d5\u00d7\3")
        buf.write("\2\2\2\u00d6\u00d8\t\2\2\2\u00d7\u00d6\3\2\2\2\u00d8\u00d9")
        buf.write("\3\2\2\2\u00d9\u00d7\3\2\2\2\u00d9\u00da\3\2\2\2\u00da")
        buf.write("\u00dc\3\2\2\2\u00db\u00a6\3\2\2\2\u00db\u00bc\3\2\2\2")
        buf.write("\u00db\u00ce\3\2\2\2\u00dcB\3\2\2\2\u00dd\u00df\t\2\2")
        buf.write("\2\u00de\u00dd\3\2\2\2\u00df\u00e0\3\2\2\2\u00e0\u00de")
        buf.write("\3\2\2\2\u00e0\u00e1\3\2\2\2\u00e1D\3\2\2\2\u00e2\u00e3")
        buf.write("\7V\2\2\u00e3\u00e4\7t\2\2\u00e4\u00e5\7w\2\2\u00e5\u00ef")
        buf.write("\7g\2\2\u00e6\u00e7\7v\2\2\u00e7\u00e8\7t\2\2\u00e8\u00e9")
        buf.write("\7w\2\2\u00e9\u00ef\7g\2\2\u00ea\u00eb\7V\2\2\u00eb\u00ec")
        buf.write("\7T\2\2\u00ec\u00ed\7W\2\2\u00ed\u00ef\7G\2\2\u00ee\u00e2")
        buf.write("\3\2\2\2\u00ee\u00e6\3\2\2\2\u00ee\u00ea\3\2\2\2\u00ef")
        buf.write("F\3\2\2\2\u00f0\u00f1\7H\2\2\u00f1\u00f2\7c\2\2\u00f2")
        buf.write("\u00f3\7n\2\2\u00f3\u00f4\7u\2\2\u00f4\u0100\7g\2\2\u00f5")
        buf.write("\u00f6\7h\2\2\u00f6\u00f7\7c\2\2\u00f7\u00f8\7n\2\2\u00f8")
        buf.write("\u00f9\7u\2\2\u00f9\u0100\7g\2\2\u00fa\u00fb\7H\2\2\u00fb")
        buf.write("\u00fc\7C\2\2\u00fc\u00fd\7N\2\2\u00fd\u00fe\7U\2\2\u00fe")
        buf.write("\u0100\7G\2\2\u00ff\u00f0\3\2\2\2\u00ff\u00f5\3\2\2\2")
        buf.write("\u00ff\u00fa\3\2\2\2\u0100H\3\2\2\2\u0101\u0102\7u\2\2")
        buf.write("\u0102\u0103\7k\2\2\u0103\u0168\7p\2\2\u0104\u0105\7e")
        buf.write("\2\2\u0105\u0106\7q\2\2\u0106\u0168\7u\2\2\u0107\u0108")
        buf.write("\7v\2\2\u0108\u0109\7c\2\2\u0109\u0168\7p\2\2\u010a\u010b")
        buf.write("\7c\2\2\u010b\u010c\7u\2\2\u010c\u010d\7k\2\2\u010d\u0168")
        buf.write("\7p\2\2\u010e\u010f\7c\2\2\u010f\u0110\7e\2\2\u0110\u0111")
        buf.write("\7q\2\2\u0111\u0168\7u\2\2\u0112\u0113\7c\2\2\u0113\u0114")
        buf.write("\7v\2\2\u0114\u0115\7c\2\2\u0115\u0168\7p\2\2\u0116\u0117")
        buf.write("\7u\2\2\u0117\u0118\7k\2\2\u0118\u0119\7p\2\2\u0119\u0168")
        buf.write("\7j\2\2\u011a\u011b\7e\2\2\u011b\u011c\7q\2\2\u011c\u011d")
        buf.write("\7u\2\2\u011d\u0168\7j\2\2\u011e\u011f\7v\2\2\u011f\u0120")
        buf.write("\7c\2\2\u0120\u0121\7p\2\2\u0121\u0168\7j\2\2\u0122\u0123")
        buf.write("\7c\2\2\u0123\u0124\7u\2\2\u0124\u0125\7k\2\2\u0125\u0126")
        buf.write("\7p\2\2\u0126\u0168\7j\2\2\u0127\u0128\7c\2\2\u0128\u0129")
        buf.write("\7e\2\2\u0129\u012a\7q\2\2\u012a\u012b\7u\2\2\u012b\u0168")
        buf.write("\7j\2\2\u012c\u012d\7c\2\2\u012d\u012e\7v\2\2\u012e\u012f")
        buf.write("\7c\2\2\u012f\u0130\7p\2\2\u0130\u0168\7j\2\2\u0131\u0132")
        buf.write("\7u\2\2\u0132\u0133\7s\2\2\u0133\u0134\7t\2\2\u0134\u0168")
        buf.write("\7v\2\2\u0135\u0136\7e\2\2\u0136\u0137\7d\2\2\u0137\u0138")
        buf.write("\7t\2\2\u0138\u0168\7v\2\2\u0139\u013a\7g\2\2\u013a\u013b")
        buf.write("\7z\2\2\u013b\u0168\7r\2\2\u013c\u013d\7n\2\2\u013d\u013e")
        buf.write("\7q\2\2\u013e\u0168\7i\2\2\u013f\u0140\7n\2\2\u0140\u0141")
        buf.write("\7q\2\2\u0141\u0142\7i\2\2\u0142\u0143\7\63\2\2\u0143")
        buf.write("\u0168\7\62\2\2\u0144\u0145\7n\2\2\u0145\u0146\7q\2\2")
        buf.write("\u0146\u0147\7i\2\2\u0147\u0168\7\64\2\2\u0148\u0149\7")
        buf.write("n\2\2\u0149\u014a\7q\2\2\u014a\u014b\7i\2\2\u014b\u014c")
        buf.write("\7\63\2\2\u014c\u0168\7r\2\2\u014d\u014e\7c\2\2\u014e")
        buf.write("\u014f\7d\2\2\u014f\u0168\7u\2\2\u0150\u0151\7e\2\2\u0151")
        buf.write("\u0152\7g\2\2\u0152\u0153\7k\2\2\u0153\u0168\7n\2\2\u0154")
        buf.write("\u0155\7h\2\2\u0155\u0156\7n\2\2\u0156\u0157\7q\2\2\u0157")
        buf.write("\u0158\7q\2\2\u0158\u0168\7t\2\2\u0159\u015a\7t\2\2\u015a")
        buf.write("\u015b\7q\2\2\u015b\u015c\7w\2\2\u015c\u015d\7p\2\2\u015d")
        buf.write("\u0168\7f\2\2\u015e\u015f\7v\2\2\u015f\u0160\7t\2\2\u0160")
        buf.write("\u0161\7w\2\2\u0161\u0162\7p\2\2\u0162\u0168\7e\2\2\u0163")
        buf.write("\u0164\7u\2\2\u0164\u0165\7k\2\2\u0165\u0166\7i\2\2\u0166")
        buf.write("\u0168\7p\2\2\u0167\u0101\3\2\2\2\u0167\u0104\3\2\2\2")
        buf.write("\u0167\u0107\3\2\2\2\u0167\u010a\3\2\2\2\u0167\u010e\3")
        buf.write("\2\2\2\u0167\u0112\3\2\2\2\u0167\u0116\3\2\2\2\u0167\u011a")
        buf.write("\3\2\2\2\u0167\u011e\3\2\2\2\u0167\u0122\3\2\2\2\u0167")
        buf.write("\u0127\3\2\2\2\u0167\u012c\3\2\2\2\u0167\u0131\3\2\2\2")
        buf.write("\u0167\u0135\3\2\2\2\u0167\u0139\3\2\2\2\u0167\u013c\3")
        buf.write("\2\2\2\u0167\u013f\3\2\2\2\u0167\u0144\3\2\2\2\u0167\u0148")
        buf.write("\3\2\2\2\u0167\u014d\3\2\2\2\u0167\u0150\3\2\2\2\u0167")
        buf.write("\u0154\3\2\2\2\u0167\u0159\3\2\2\2\u0167\u015e\3\2\2\2")
        buf.write("\u0167\u0163\3\2\2\2\u0168J\3\2\2\2\u0169\u016d\t\5\2")
        buf.write("\2\u016a\u016c\t\6\2\2\u016b\u016a\3\2\2\2\u016c\u016f")
        buf.write("\3\2\2\2\u016d\u016b\3\2\2\2\u016d\u016e\3\2\2\2\u016e")
        buf.write("L\3\2\2\2\u016f\u016d\3\2\2\2\u0170\u0172\t\7\2\2\u0171")
        buf.write("\u0170\3\2\2\2\u0172\u0173\3\2\2\2\u0173\u0171\3\2\2\2")
        buf.write("\u0173\u0174\3\2\2\2\u0174\u0175\3\2\2\2\u0175\u0176\b")
        buf.write("'\2\2\u0176N\3\2\2\2\u0177\u0178\7\61\2\2\u0178\u0179")
        buf.write("\7,\2\2\u0179\u017d\3\2\2\2\u017a\u017c\13\2\2\2\u017b")
        buf.write("\u017a\3\2\2\2\u017c\u017f\3\2\2\2\u017d\u017e\3\2\2\2")
        buf.write("\u017d\u017b\3\2\2\2\u017e\u0180\3\2\2\2\u017f\u017d\3")
        buf.write("\2\2\2\u0180\u0181\7,\2\2\u0181\u0182\7\61\2\2\u0182\u0183")
        buf.write("\3\2\2\2\u0183\u0184\b(\2\2\u0184P\3\2\2\2\u0185\u0186")
        buf.write("\7\61\2\2\u0186\u0187\7\61\2\2\u0187\u018b\3\2\2\2\u0188")
        buf.write("\u018a\n\b\2\2\u0189\u0188\3\2\2\2\u018a\u018d\3\2\2\2")
        buf.write("\u018b\u0189\3\2\2\2\u018b\u018c\3\2\2\2\u018c\u018e\3")
        buf.write("\2\2\2\u018d\u018b\3\2\2\2\u018e\u018f\b)\2\2\u018fR\3")
        buf.write("\2\2\2\u0190\u0194\7%\2\2\u0191\u0193\n\b\2\2\u0192\u0191")
        buf.write("\3\2\2\2\u0193\u0196\3\2\2\2\u0194\u0192\3\2\2\2\u0194")
        buf.write("\u0195\3\2\2\2\u0195\u0197\3\2\2\2\u0196\u0194\3\2\2\2")
        buf.write("\u0197\u0198\b*\2\2\u0198T\3\2\2\2\31\2\u00a8\u00ae\u00b3")
        buf.write("\u00b8\u00ba\u00c0\u00c4\u00c9\u00cb\u00d0\u00d4\u00d9")
        buf.write("\u00db\u00e0\u00ee\u00ff\u0167\u016d\u0173\u017d\u018b")
        buf.write("\u0194\3\b\2\2")
        return buf.getvalue()


class GrammarLexer(Lexer):
    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [DFA(ds, i) for i, ds in enumerate(atn.decisionToState)]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    FLOAT = 32
    INT = 33
    TRUE = 34
    FALSE = 35
    UFUNC_NAME = 36
    ID = 37
    WS = 38
    BLOCK_COMMENT = 39
    LINE_COMMENT = 40
    PYTHON_COMMENT = 41

    channelNames = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"]

    modeNames = ["DEFAULT_MODE"]

    literalNames = [
        "<INVALID>",
        "':='",
        "';'",
        "'='",
        "'('",
        "')'",
        "'+'",
        "'-'",
        "'**'",
        "'*'",
        "'/'",
        "'%'",
        "'<<'",
        "'>>'",
        "'&'",
        "'|'",
        "'^'",
        "'!'",
        "'not'",
        "'<'",
        "'>'",
        "'<='",
        "'>='",
        "'=='",
        "'!='",
        "'&&'",
        "'and'",
        "'||'",
        "'or'",
        "'pi'",
        "'E'",
        "'tau'",
    ]

    symbolicNames = [
        "<INVALID>",
        "FLOAT",
        "INT",
        "TRUE",
        "FALSE",
        "UFUNC_NAME",
        "ID",
        "WS",
        "BLOCK_COMMENT",
        "LINE_COMMENT",
        "PYTHON_COMMENT",
    ]

    ruleNames = [
        "T__0",
        "T__1",
        "T__2",
        "T__3",
        "T__4",
        "T__5",
        "T__6",
        "T__7",
        "T__8",
        "T__9",
        "T__10",
        "T__11",
        "T__12",
        "T__13",
        "T__14",
        "T__15",
        "T__16",
        "T__17",
        "T__18",
        "T__19",
        "T__20",
        "T__21",
        "T__22",
        "T__23",
        "T__24",
        "T__25",
        "T__26",
        "T__27",
        "T__28",
        "T__29",
        "T__30",
        "FLOAT",
        "INT",
        "TRUE",
        "FALSE",
        "UFUNC_NAME",
        "ID",
        "WS",
        "BLOCK_COMMENT",
        "LINE_COMMENT",
        "PYTHON_COMMENT",
    ]

    grammarFileName = "Grammar.g4"

    def __init__(self, input=None, output: TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.3")
        self._interp = LexerATNSimulator(
            self, self.atn, self.decisionsToDFA, PredictionContextCache()
        )
        self._actions = None
        self._predicates = None
